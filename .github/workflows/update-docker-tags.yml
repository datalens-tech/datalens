name: Update docker images

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  CONTROL_API_IMAGE_NAME: datalens-tech/datalens-control-api
  DATA_API_IMAGE_NAME: datalens-tech/datalens-data-api
  UI_IMAGE_NAME: datalens-tech/datalens-ui
  US_IMAGE_NAME: datalens-tech/datalens-us
  AUTH_IMAGE_NAME: datalens-tech/datalens-auth

jobs:
  run:
    name: Set release tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get last version config
        run: |
          VERSION_CONFIG=$(cat ./versions-config.json)

          BACKEND_VERSION=$(echo "${VERSION_CONFIG}" | jq -r '.backendVersion')
          UI_VERSION=$(echo "${VERSION_CONFIG}" | jq -r '.uiVersion')
          US_VERSION=$(echo "${VERSION_CONFIG}" | jq -r '.usVersion')
          AUTH_VERSION=$(echo "${VERSION_CONFIG}" | jq -r '.authVersion')

          echo "BACKEND_VERSION=$BACKEND_VERSION" >> "$GITHUB_ENV"
          echo "UI_VERSION=$UI_VERSION" >> "$GITHUB_ENV"
          echo "US_VERSION=$US_VERSION" >> "$GITHUB_ENV"
          echo "AUTH_VERSION=$AUTH_VERSION" >> "$GITHUB_ENV"
      - uses: docker/setup-buildx-action@v3
      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images and push with release tag
        run: |
          docker buildx imagetools create --tag ${{ env.REGISTRY }}/${{ env.UI_IMAGE_NAME }}:release ${{ env.REGISTRY }}/${{ env.UI_IMAGE_NAME }}:${{ env.UI_VERSION }}
          docker buildx imagetools create --tag ${{ env.REGISTRY }}/${{ env.US_IMAGE_NAME }}:release ${{ env.REGISTRY }}/${{ env.US_IMAGE_NAME }}:${{ env.US_VERSION }}
          docker buildx imagetools create --tag ${{ env.REGISTRY }}/${{ env.AUTH_IMAGE_NAME }}:release ${{ env.REGISTRY }}/${{ env.AUTH_IMAGE_NAME }}:${{ env.AUTH_VERSION }}
          docker buildx imagetools create --tag ${{ env.REGISTRY }}/${{ env.UI_IMAGE_NAME }}:release-e2e ${{ env.REGISTRY }}/${{ env.UI_IMAGE_NAME }}:${{ env.UI_VERSION }}-e2e
          docker buildx imagetools create --tag ${{ env.REGISTRY }}/${{ env.CONTROL_API_IMAGE_NAME }}:release ${{ env.REGISTRY }}/${{ env.CONTROL_API_IMAGE_NAME }}:${{ env.BACKEND_VERSION }}
          docker buildx imagetools create --tag ${{ env.REGISTRY }}/${{ env.DATA_API_IMAGE_NAME }}:release ${{ env.REGISTRY }}/${{ env.DATA_API_IMAGE_NAME }}:${{ env.BACKEND_VERSION }}

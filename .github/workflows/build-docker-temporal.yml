name: Build Docker Temporal

on:
  push:
    branches:
      - main
    paths:
      - 'temporal/*'
  workflow_dispatch:
    inputs:
      temporal_version:
        type: string
        default: '1.27.2'
        description: 'Temporal main version'
      temporal_version_suffix:
        type: string
        default: '0.1.0'
        description: 'Container custom version suffix'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: datalens-tech/datalens-temporal
  TEMPORAL_VERSION: ${{ github.event.inputs.temporal_version || '1.27.2' }}
  TEMPORAL_VERSION_SUFFIX: ${{ github.event.inputs.temporal_version_suffix || '0.1.0' }}

jobs:
  run:
    name: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64'
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.TEMPORAL_VERSION }}
            type=raw,value=${{ env.TEMPORAL_VERSION }}-${{ env.TEMPORAL_VERSION_SUFFIX }}
      - uses: docker/build-push-action@v6
        with:
          build-args: |
            TEMPORAL_VERSION=${{ env.TEMPORAL_VERSION }}
          context: ./temporal
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

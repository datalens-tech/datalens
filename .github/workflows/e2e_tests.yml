name: E2E Tests

on:
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run-e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Get last version config
        run: |
          VERSION_CONFIG=$(cat ./versions-config.json)

          UI_VERSION=$(echo "${VERSION_CONFIG}" | jq -r '.uiVersion')
          US_VERSION=$(echo "${VERSION_CONFIG}" | jq -r '.usVersion')
          BACKEND_VERSION=$(echo "${VERSION_CONFIG}" | jq -r '.backendVersion')

          echo "UI_VERSION=$UI_VERSION" >> "$GITHUB_ENV"
          echo "US_VERSION=$US_VERSION" >> "$GITHUB_ENV"
          echo "CONTROL_API_VERSION=$BACKEND_VERSION" >> "$GITHUB_ENV"
          echo "DATA_API_VERSION=$BACKEND_VERSION" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
        with:
          repository: datalens-tech/datalens-ui
          path: ./datalens-ui
          ref: release-${{ env.UI_VERSION }}

      - name: Check docker compose Config
        working-directory: ./datalens-ui
        run: npm run test:e2e:docker:check
        env:
          US_VERSION: ${{ env.US_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}

      - name: Run tests from builded docker image
        if: ${{ env.UI_VERSION != '' }}
        working-directory: ./datalens-ui
        run: npm run test:e2e:docker
        env:
          US_VERSION: ${{ env.US_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}
          E2E_RETRY_TIMES: 2
          E2E_TEST_TIMEOUT: 90000
          E2E_ACTION_TIMEOUT: 10000
          E2E_EXPECT_TIMEOUT: 10000

      - name: Copy tests report from docker run
        if: always()
        working-directory: ./datalens-ui
        run: |
          echo "export report from docker run"
          rm -rf ./tests/artifacts
          npm run test:e2e:docker:report
        env:
          US_VERSION: ${{ env.US_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}

      - name: Run docker compose down
        if: always()
        working-directory: ./datalens-ui
        run: |
          npm run test:e2e:docker:down
        env:
          US_VERSION: ${{ env.US_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}

      - name: Save report link and pr number
        if: always()
        working-directory: ./datalens-ui
        run: |
          mkdir -p ./tests/artifacts
          echo "${{ github.event.repository.name }}/reports/${{ github.head_ref || github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}" > ./tests/artifacts/report-link
          echo "${{ github.event.pull_request.number }}" > ./tests/artifacts/report-pr

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./datalens-ui/tests/artifacts/
          retention-days: 30

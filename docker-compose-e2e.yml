services:
  pg-compeng:
    container_name: e2e-datalens-pg-compeng
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres

  control-api:
    container_name: e2e-datalens-control-api
    image: ghcr.io/datalens-tech/datalens-control-api:${CONTROL_API_VERSION:-0.2139.0}
    environment:
      BI_API_UWSGI_WORKERS_COUNT: 4
      CONNECTOR_AVAILABILITY_VISIBLE: "clickhouse,postgres,chyt"
      RQE_FORCE_OFF: 1
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      RQE_SECRET_KEY: ""
      US_HOST: "http://us:8083"
      US_MASTER_TOKEN: "fake-us-master-token"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"
    ports:
      - 8081:8080
    depends_on:
      - us
    volumes:
      - ./backend-configs:/etc/backend-configs

  data-api:
    container_name: e2e-datalens-data-api
    image: ghcr.io/datalens-tech/datalens-data-api:${DATA_API_VERSION:-0.2139.0}
    environment:
      GUNICORN_WORKERS_COUNT: 5
      RQE_FORCE_OFF: 1
      CACHES_ON: 0
      MUTATIONS_CACHES_ON: 0
      RQE_SECRET_KEY: ""
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      BI_COMPENG_PG_ON: 1
      BI_COMPENG_PG_URL: "postgresql://postgres:postgres@pg-compeng:5432/postgres"
      US_HOST: "http://us:8083"
      US_MASTER_TOKEN: "fake-us-master-token"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"
    ports:
      - 8082:8080
    depends_on:
      - us
      - pg-compeng
    volumes:
      - ./backend-configs:/etc/backend-configs

  pg-us:
    container_name: e2e-datalens-pg-us
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: us-db-ci_purgeable
      POSTGRES_USER: us
      POSTGRES_PASSWORD: us
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "us-db-ci_purgeable"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 3s
    volumes:
      - pg-us-db:/var/lib/postgresql/data

  postgres-e2e:
    container_name: e2e-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: e2e
      POSTGRES_DB: sales
      POSTGRES_USER: e2e
    volumes:
      - ./data:/docker-entrypoint-initdb.d

  us:
    container_name: e2e-datalens-us
    image: ghcr.io/datalens-tech/datalens-us:${US_VERSION:-release}
    depends_on:
      pg-us:
        condition: service_healthy
    environment:
      APP_INSTALLATION: "opensource"
      APP_ENV: "prod"
      MASTER_TOKEN: "fake-us-master-token"
      POSTGRES_DSN_LIST: ${METADATA_POSTGRES_DSN_LIST:-postgres://us:us@pg-us:5432/us-db-ci_purgeable}
      SKIP_INSTALL_DB_EXTENSIONS: ${METADATA_SKIP_INSTALL_DB_EXTENSIONS:-0}
      USE_DEMO_DATA: 0
      USE_E2E_MOCK_DATA: 1
      HC: ${HC:-0}
      NODE_EXTRA_CA_CERTS: /certs/root.crt
    ports:
      - "8083:8083"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./certs:/certs
      - ./data:/opt/e2e-data

  datalens-from-build:
    container_name: e2e-datalens-ui-build
    image: e2e-datalens-ui:pr
    build:
      dockerfile: Dockerfile
      context: ../
      network: host
    ports:
      - 8080:8080
    depends_on:
      - us
      - control-api
      - data-api
      - postgres-e2e
    environment:
      APP_MODE: "full"
      APP_ENV: "production"
      APP_INSTALLATION: "opensource"
      AUTH_POLICY: "disabled"
      US_ENDPOINT: "http://us:8083"
      NODE_EXTRA_CA_CERTS: "/usr/local/share/ca-certificates/cert.pem"
      HC: ${HC:-0}

  datalens-from-image:
    container_name: e2e-datalens-ui-image
    image: ghcr.io/datalens-tech/datalens-ui:${UI_VERSION:-release}
    depends_on:
      - us
      - control-api
      - data-api
      - postgres-e2e
    environment:
      APP_MODE: "full"
      APP_ENV: "production"
      APP_INSTALLATION: "opensource"
      AUTH_POLICY: "disabled"
      US_ENDPOINT: "http://us:8083"
      NODE_EXTRA_CA_CERTS: "/usr/local/share/ca-certificates/cert.pem"
      HC: ${HC:-0}

  datalens-from-image-tests:
    container_name: e2e-datalens-ui-tests
    image: ghcr.io/datalens-tech/datalens-ui:${UI_VERSION:-0.2261.0}-e2e
    depends_on:
      - us
      - control-api
      - data-api
      - postgres-e2e
      - datalens-from-image
    environment:
      E2E_DOMAIN: http://datalens-from-image:8080
      E2E_RETRY_TIMES: ${E2E_RETRY_TIMES:-1}
      E2E_ACTION_TIMEOUT: ${E2E_ACTION_TIMEOUT}
      NO_AUTH: true

volumes:
  pg-us-db:

services:
  temporal:
    container_name: datalens-temporal
    image: ghcr.io/datalens-tech/datalens-temporal:1.27.2
    healthcheck:
      test: ["CMD", "/etc/temporal/healthcheck.sh"]
      interval: 5s
      retries: 10
      start_period: 3s
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-pg-user}
      POSTGRES_DB: ${POSTGRES_DB_TEMPORAL:-pg-temporal-db}
      POSTGRES_DB_VISIBILITY: ${POSTGRES_DB_TEMPORAL_VISIBILITY:-pg-temporal-visibility-db}
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      #
      NAMESPACES: meta-manager
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default
  #
  ui-api:
    container_name: datalens-ui-api
    image: ghcr.io/datalens-tech/datalens-ui:0.2848.0
    environment:
      APP_MODE: api
      APP_ENV: production
      APP_INSTALLATION: opensource
      #
      US_ENDPOINT: http://us:8080
      BI_API_ENDPOINT: http://control-api:8080
    depends_on:
      - us
    volumes: []
    networks:
      - default
  #
  meta-manager:
    container_name: datalens-meta-manager
    image: ghcr.io/datalens-tech/datalens-meta-manager:0.29.0
    environment:
      APP_INSTALLATION: opensource
      APP_ENV: prod
      APP_PORT: 8080
      #
      US_MASTER_TOKEN: ${US_MASTER_TOKEN:-us-master-token}
      EXPORT_DATA_VERIFICATION_KEY: ${EXPORT_DATA_VERIFICATION_KEY:-export-data-verification-key}
      #
      POSTGRES_DSN_LIST: "postgres://${POSTGRES_USER:-pg-user}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB_META_MANAGER:-pg-meta-manager-db}${POSTGRES_ARGS:-}"
      #
      US_ENDPOINT: http://us:8080
      UI_API_ENDPOINT: http://ui-api:8080
      TEMPORAL_ENDPOINT: temporal:7233
      #
      AUTH_ENABLED: ${AUTH_ENABLED:-true}
      AUTH_TOKEN_PUBLIC_KEY: ${AUTH_TOKEN_PUBLIC_KEY:------BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+HICDZMfimMIiGdd0dPr\n2N3zxHOJqiVXuvUj/aBBS7c8760rJUh4344sP/0Gid558yH/v1MtzZ0R9w09v6gb\nSNrSiNwIUNGPhbnm9Jf+kMezsI/rkcIdoVm3KJ8CFUYy6MRPzW7iJmIVRHBb82v1\nmAYCCQFU6IRtFIa9hQ8wedWwxqXZekSNS+6NB37dmmQB9kz2E3MY+KRLigOh4i3p\nCZ1ti3HVvMa9Rlgk9FmoWExzub5ECChqwm+vn8yFXjYW7kUSClcV2xx4nbQWqjrR\nyyLk6W2BNOuCFVvz0j+5XkpLAt7tljtVZc+572HBEKpF2mAdmAip5NzeDhKqucJ+\nZQIDAQAB\n-----END PUBLIC KEY-----}
    depends_on:
      temporal:
        condition: service_healthy
      ui-api:
        condition: service_started
    volumes: []
    networks:
      - default
#
volumes:
  db-postgres:
#
networks:
  default:

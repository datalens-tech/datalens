worker_processes auto;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  ssl_protocols TLSv1.2 TLSv1.3;

  keepalive_timeout  65;

  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font application/x-font-opentype application/x-font-otf application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/opentype font/otf font/ttf image/svg+xml image/x-icon text/css text/javascript text/plain text/xml;

  server_tokens off;
  server_names_hash_max_size 512;

  proxy_buffer_size 32k;
  proxy_buffers 8 32k;

  fastcgi_buffers 8 32k;
  fastcgi_buffer_size 32k;

  client_header_buffer_size 5120k;
  large_client_header_buffers 16 5120k;

  client_max_body_size 200m;
  client_body_buffer_size 128k;

  server {
    listen 443 ssl;
    server_name ${DOMAIN};

    http2 on;

    ssl_certificate     /etc/certs/${DOMAIN}.crt;
    ssl_certificate_key /etc/certs/${DOMAIN}.key;

    ssl_session_cache shared:SSL:50m;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
    ssl_prefer_server_ciphers on;

    location / {
      proxy_pass http://${ENDPOINT};

      # proxy timeout 10 min
      proxy_connect_timeout 600s;
      proxy_send_timeout 600s;
      proxy_read_timeout 600s;
      
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # prevent nginx from leaking other server configurations on the same machine
  server {
      listen      80 default_server;
      server_name _;
      return      444;
  }

  server {
      listen      443 ssl default_server;
      ssl_reject_handshake on;
  }
}

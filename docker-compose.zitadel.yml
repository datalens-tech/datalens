version: "3.7"

services:
  pg-compeng:
    container_name: datalens-pg-compeng
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres

  control-api:
    container_name: datalens-control-api
    image: ghcr.io/datalens-tech/datalens-control-api:0.2091.0
    environment:
      BI_API_UWSGI_WORKERS_COUNT: 4
      CONNECTOR_AVAILABILITY_VISIBLE: "clickhouse,postgres,chyt,ydb,mysql,greenplum"
      RQE_FORCE_OFF: 1
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      RQE_SECRET_KEY: ""
      US_HOST: "http://us:8083"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"

      ZITADEL_URI: "http://zitadel:8080"
    entrypoint: "/usr/bin/sh -c '
      US_MASTER_TOKEN=$(cat /secrets/US_MASTER_TOKEN) \
      ZITADEL_APP_CLIENT_ID=$(cat /secrets/ZITADEL_APP_CLIENT_ID) \
      ZITADEL_APP_CLIENT_SECRET=$(cat /secrets/ZITADEL_APP_CLIENT_SECRET) \
      ZITADEL_BI_SERVICE_USER_CLIENT_ID=$(cat /secrets/ZITADEL_BI_SERVICE_USER_CLIENT_ID) \
      ZITADEL_BI_SERVICE_USER_CLIENT_SECRET=$(cat /secrets/ZITADEL_BI_SERVICE_USER_CLIENT_SECRET) \
      /etc/service/dl_api/run
    '"
    ports:
      - 8081:8080
    depends_on:
      us:
        condition: 'service_started'
      zitadel-post:
        condition: 'service_completed_successfully'
    volumes:
      - ./backend-configs:/etc/backend-configs
      - ./common_data/secrets:/secrets

  data-api:
    container_name: datalens-data-api
    image: ghcr.io/datalens-tech/datalens-data-api:0.2091.0
    environment:
      GUNICORN_WORKERS_COUNT: 5
      RQE_FORCE_OFF: 1
      CACHES_ON: 0
      MUTATIONS_CACHES_ON: 0
      RQE_SECRET_KEY: ""
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      BI_COMPENG_PG_ON: 1
      BI_COMPENG_PG_URL: "postgresql://postgres:postgres@pg-compeng:5432/postgres"
      US_HOST: "http://us:8083"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"

      ZITADEL_URI: "http://zitadel:8080"
    entrypoint: "/usr/bin/sh -c '
      US_MASTER_TOKEN=$(cat /secrets/US_MASTER_TOKEN) \
      ZITADEL_APP_CLIENT_ID=$(cat /secrets/ZITADEL_APP_CLIENT_ID) \
      ZITADEL_APP_CLIENT_SECRET=$(cat /secrets/ZITADEL_APP_CLIENT_SECRET) \
      ZITADEL_BI_SERVICE_USER_CLIENT_ID=$(cat /secrets/ZITADEL_BI_SERVICE_USER_CLIENT_ID) \
      ZITADEL_BI_SERVICE_USER_CLIENT_SECRET=$(cat /secrets/ZITADEL_BI_SERVICE_USER_CLIENT_SECRET) \
      /etc/service/dl_api/run
    '"
    ports:
      - 8082:8080
    depends_on:
      us:
        condition: 'service_started'
      pg-compeng:
        condition: 'service_started'
      zitadel-post:
        condition: 'service_completed_successfully'
    volumes:
      - ./backend-configs:/etc/backend-configs
      - ./common_data/secrets:/secrets

  pg-demo-connection:
    container_name: datalens-pg-demo-connection
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
    volumes:
      - ./pg-demo-connection/init:/docker-entrypoint-initdb.d
      - ./pg-demo-connection/data:/var/lib/postgresql/data

  pg-us:
    container_name: datalens-pg-us
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: us-db-ci_purgeable
      POSTGRES_USER: us
      POSTGRES_PASSWORD: us
    volumes:
      - ./metadata:/var/lib/postgresql/data
    ports:
      - "8086:5432"

  us:
    container_name: datalens-us
    image: ghcr.io/datalens-tech/datalens-us:0.209.0
    depends_on:
      pg-us:
        condition: 'service_started'
      pre:
        condition: 'service_completed_successfully'
    environment:
      APP_INSTALLATION: "opensource"
      APP_ENV: "prod"
      POSTGRES_DSN_LIST: ${METADATA_POSTGRES_DSN_LIST:-postgres://us:us@pg-us:5432/us-db-ci_purgeable}
      SKIP_INSTALL_DB_EXTENSIONS: ${METADATA_SKIP_INSTALL_DB_EXTENSIONS:-0}
      USE_DEMO_DATA: ${USE_DEMO_DATA:-1}
      HC: ${HC:-0}
      NODE_EXTRA_CA_CERTS: /certs/root.crt

      ZITADEL: "true"
      ZITADEL_URI: "http://zitadel:8080"
    ports:
      - "8083:8083"
    entrypoint: "/usr/bin/sh -c '
      MASTER_TOKEN=$(cat /secrets/US_MASTER_TOKEN) \
      CLIENT_ID=$(cat /secrets/ZITADEL_APP_CLIENT_ID) \
      CLIENT_SECRET=$(cat /secrets/ZITADEL_APP_CLIENT_SECRET) \
      SERVICE_CLIENT_ID=$(cat /secrets/ZITADEL_US_SERVICE_USER_CLIENT_ID) \
      SERVICE_CLIENT_SECRET=$(cat /secrets/ZITADEL_US_SERVICE_USER_CLIENT_SECRET) \
      /usr/bin/supervisord -c/etc/supervisor/supervisord.conf
    '"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./certs:/certs
      - ./common_data/secrets:/secrets

  zitadel-db:
    restart: 'always'
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: zitadel
      POSTGRES_USER: zit
      POSTGRES_PASSWORD: zit
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "zit"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    ports:
      - "8087:5432"
    volumes:
      - ./zitadel-db:/var/lib/postgresql/data

  pre:
    build:
      context: jobs
      dockerfile: pre/Dockerfile
    volumes:
      - ./common_data:/data:rw

  zitadel:
    restart: 'always'
    image: 'ghcr.io/zitadel/zitadel:v2.54.1'
    command: 'start-from-init --masterkeyFile /secrets/ZITADEL_MASTER_KEY --tlsMode disabled'
    environment:
      - 'ZITADEL_DATABASE_POSTGRES_HOST=zitadel-db'
      - 'ZITADEL_DATABASE_POSTGRES_PORT=5432'
      - 'ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel'
      - 'ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zit'
      - 'ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=zit'
      - 'ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable'
      - 'ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=zit'
      - 'ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=zit'
      - 'ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable'
      - 'ZITADEL_SYSTEMDEFAULTS_SECRETGENERATORS_PASSWORDSALTCOST=1'
      - 'ZITADEL_EXTERNALSECURE=false'
      - 'ZITADEL_EXTERNALPORT=${ZITADEL_EXTERNALPORT:-8085}'
      - 'ZITADEL_EXTERNALDOMAIN=${ZITADEL_EXTERNALDOMAIN:-localhost}'
      - 'ZITADEL_FIRSTINSTANCE_PATPATH=/machinekey/zitadel-admin-sa.token'
      - 'ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_USERNAME=zitadel-admin-sa'
      - 'ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_NAME=Admin'
      - 'ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINEKEY_TYPE=1'
      - 'ZITADEL_FIRSTINSTANCE_ORG_MACHINE_PAT_EXPIRATIONDATE=9999-01-01T00:00:00Z'
      - 'ZITADEL_DEFAULTINSTANCE_OIDCSETTINGS_ACCESSTOKENLIFETIME=0.25h'
      - 'ZITADEL_DEFAULTINSTANCE_OIDCSETTINGS_REFRESHTOKENEXPIRATION=336h'
    depends_on:
      pre:
        condition: 'service_completed_successfully'
      zitadel-db:
        condition: 'service_healthy'
    ports:
      - '8085:8080'
    volumes:
      - ./common_data/zitadel_machinekey:/machinekey:rw
      - ./common_data/secrets:/secrets

  zitadel-post:
    build:
      context: jobs
      dockerfile: zitadel-post/Dockerfile
    network_mode: "host"
    depends_on:
      - zitadel
    environment:
      ZITADEL_DEV_MODE: "true"
    volumes:
      - ./common_data:/data:rw

  datalens:
    container_name: datalens-ui
    image: ghcr.io/datalens-tech/datalens-ui:0.1741.0
    ports:
      - ${UI_PORT:-8080}:8080
    depends_on:
      zitadel-post:
        condition: 'service_completed_successfully'
      us:
        condition: 'service_started'
      control-api:
        condition: 'service_started'
      data-api:
        condition: 'service_started'
      pg-demo-connection:
        condition: 'service_started'
    environment:
      APP_MODE: "full"
      APP_ENV: "production"
      APP_INSTALLATION: "opensource"
      AUTH_POLICY: "disabled"
      US_ENDPOINT: "http://us:8083"
      BI_API_ENDPOINT: "http://control-api:8080"
      BI_DATA_ENDPOINT: "http://data-api:8080"
      NODE_EXTRA_CA_CERTS: "/usr/local/share/ca-certificates/cert.pem"
      HC: ${HC:-0}

      ZITADEL: "true"
      ZITADEL_URI: "http://localhost:8085"
      ZITADEL_INTERNAL_URI: "http://zitadel:8080"
      APP_HOST_URI: "http://localhost:8080"
    entrypoint: "/usr/bin/sh -c '
      CLIENT_ID=$(cat /secrets/ZITADEL_APP_CLIENT_ID) \
      CLIENT_SECRET=$(cat /secrets/ZITADEL_APP_CLIENT_SECRET) \
      ZITADEL_PROJECT_ID=$(cat /secrets/ZITADEL_PROJECT_ID) \
      ZITADEL_COOKIE_SECRET=$(cat /secrets/ZITADEL_COOKIE_SECRET) \
      SERVICE_CLIENT_ID=$(cat /secrets/ZITADEL_CHARTS_SERVICE_USER_CLIENT_ID) \
      SERVICE_CLIENT_SECRET=$(cat /secrets/ZITADEL_CHARTS_SERVICE_USER_CLIENT_SECRET) \
      /usr/bin/supervisord -c/etc/supervisor/supervisord.conf
    '"
    volumes:
      - ./common_data/secrets:/secrets
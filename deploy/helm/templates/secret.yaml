# find secret resource with name datalens-secret
{{- $secret := (lookup "v1" "Secret" .Release.Namespace "datalens-secret").data | default dict }}
{{- $pg_password := get $secret "POSTGRES_PASSWORD" | default (randAlphaNum 32 | b64enc) }}
apiVersion: v1
kind: Secret
metadata:
  name: datalens-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  US_MASTER_TOKEN: {{ get $secret "US_MASTER_TOKEN" | default (randAlphaNum 32 | b64enc) }}
  # double base64 encoding is not error
  CONTROL_API_CRYPTO_KEY: {{ get $secret "CONTROL_API_CRYPTO_KEY" | default (randAlphaNum 32 | b64enc | b64enc) }}
  POSTGRES_PASSWORD: {{ $pg_password }}
  POSTGRES_DSN_LIST_US: {{ print "postgres://pg-user:" ($pg_password | b64dec) "@datalens-pg-cip:5432/pg-us-db" | b64enc }}
  POSTGRES_DSN_LIST_COMPENG: {{ print "postgres://pg-user:" ($pg_password | b64dec) "@datalens-pg-cip:5432/pg-compeng-db" | b64enc }}
